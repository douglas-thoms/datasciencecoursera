install.packages("swirl")
libary(swirl)
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
x<-5+7
x
y<-x-3
9
y
z<-c(1.1,9,3.14)
?
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
my-sqrt
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(10,10)
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
library(swirl)
swirl()
getwd()
ls()
x<-9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir<-getwd()
dir.create(testdir)
dir.create("testdir")
setwd("~/testdir")
setwd("testdir")
setwd(testdir)
setwd(../"testdir")
setwd("../testdir")
setwd("testdir")
()
setwd("../testdir")
()
info()
skip()
swirl()
setwd("..")
setwd("testdir")
skip()
swirl()
getwd()
setwd("c:/Users/Douglas/Documents/testdir")
getwd
getwd()
setwd("..")
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
ls
list.files
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest.R")
file.path("mytest3.R")
file.path(folder1,folder2)
file.path('folder1','folder2')
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'),recursive = TRUE)
setwd("~/Documents/Coursera")
setwd("..")
setwd(old.dir)
swirl()
libary(swirl)
libary.install(swirl)
library.install(swirl)
library(swirl)
swirl()
1:20
pi:10
15:1
?':'
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq = seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with+my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each=10)
library.install(swirl)
library(swirl)
swirl()
num_vect<-c(0.5,55,-10,6)
tf<- [num_vect<1]
tf<- (num_vect<1)
tf<- num_vect<1
print tf
print(tf)
tf
num_vect >= 6
my_char<-c("My","Name",is)
my_char<-c("My","Name","is")
my_char<-c("My","name","is")
my_char
type paste(my_char, collapse = " ")
paste(my_char, collapse = " ")
c(my_char, "douchebag")
my_name <-c(my_char, "douchebag")
my_name
my_name <- paste(my_name, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello","world!",sep = " ")
paste(1:3,c("x","y","z"), sept = "")
paste(1:3,c("X","Y","Z"), sept = "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS,1:4, sep = "-")
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
x <- 10:20
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z<-10
f(3)
libary(swirl)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
sapply(flags,class)
cls_vect <- sapply(flags, class)
cls_vect
class(cls_vect)
sum(flags$orange)
flag_colors <-[,11:17]
flag_colors <- flags [,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <-[,19:23]
flag_shapes <-flags[,19:23]
lapply(flag_shapes,range)
sapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(unique_vals,unique)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate,flags$landmass)
tapply(flags$animate,flags$landmass, mean)
tapply(flags$population,flags$red,summary)
tapply(flags$population,flags$landmass,summary)
library(datasets)
data("iris")
data(iris)
?iris
mean(iris$Sepal.Length)
?sapply
?vapply
?tapply
tapply(iris$Sepal.Length,iris$Species)
tapply(iris$Sepal.Length,iris$Species,mean)
?
iris
viewinfo(iris)
viewinfo("iris")
?apply
colmeans(iris)
rowmeans(iris[,1:4])
apply(iris[, 1:4], 1, mean)
pply(iris, 2, mean)
apply(iris, 2, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
with(mtcars, tapply(mpg, cyl, mean))
?with
sapply(mtcars, cyl, mean)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
cyyl <- with(mtcars, tapply(hp, cyl, mean))
cyyl[3]-cyyl[1]
debug(ls)
is
exit
c
e
q
undebug(ls)
Q
debug(ls)
ls
ls
Q
Q
Q
undebug
debug(ls)1
suck a go
n
undebug(ls)
Q
Q
Q
Q
ccyl
debug(ls)
ls
?ls
ls
ls(iris)
undebug(ls)
Q
Q
undebug(ls)
?
ls
ls
ls.str
ls()
tapply(iris$Sepal.Length,iris$Species,mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
sapply(mtcars, cyl, mean)
with(mtcars, tapply(mpg, cyl, mean))
tapply(mtcars$cyl, mtcars$mpg, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
mean(mtcars$mpg, mtcars$cyl)
split(mtcars, mtcars$cyl)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
cyyl[3]-cyyl[1]
debug(ls)
ls()
4
3
ls()
debug(ls)
set.seed(1)
rpois(5,2)
?rnorm
?ppois
set.seed(10)
x <- rep(0:1, each =5)
e <- rnorm(10,0,20)
y <- 0.5 +2*x +e
?rbinom
library(swirl)
swirl()
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size
object.size(plants)
name(plants)
names(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10, replace = FALSE)
sample(1:20, 10)
?letters
letters
LETTERS
sample(LETTERS)
sample(c(0,1))
sample(c(0,1),100, replace = TRUE, prob = c(0.3,0.7))
flips <- sample(c(0,1),100, replace = TRUE, prob = c(0.3,0.7))
flips
sum(flips)
?rbinom
rbinom(1, size= 100, prob 0.7)
rbinom(1, size= 100, prob = 0.7)
rbinom(1, size= 100, prob = 0.7)
flips2 <- rbinom(1, size= 100, prob = 0.7)
flips2 <- rbinom(n = 100, size= 1, prob = 0.7)
flips2
sum(flips2)
?rnorm()
?rnorm
rnorm(10)
rnorm(25,100,25)
rnorm(10,100,25)
rpois()
?rpois
rpois(5)
rpois(5,10)
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
getwd()
setwd("C:/Users/Douglas/Documents/Coursera/hospital")
source("rankall.R")
rankall("pneumonia",3)
View(state_split_df)
state_split_df[["AK"]][["hospital"]]
rankall("pneumonia",3)
source("rankall2.R")
source("rankall2.R")
rankall2("pneumonia",3)
rankall("pneumonia",3)
View(rankall)
source("rankall2.R")
rankall2("pneumonia",3)
source("rankall2.R")
rankall2("pneumonia",3)
n
rankall2("pneumonia",3)
source("rankall2.R")
rankall2("pneumonia",3)
rankall2("heart attack",3)
rankall2("pneumonia",3)
rankall2("heart failture",3)
rankall2("heart failure",3)
source("rankall2.R")
rankall2("heart failure",3)
source("rankall2.R")
rankall2("heart failure",3)
source("rankall2.R")
rankall2("heart failure",3)
source("rankall2.R")
rankall2("heart failure",3)
source("rankall2.R")
rankall2("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
source("rankall.R")
rankall("heart failure",3)
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
source("rankall.R")
rankall("heart failure",3)
rankall("pneumonia",3)
rankall("pneumonia",3)
rankall("heart failure",3)
rankall("pneumonia",3)
rankall("pneumonia",best)
rankall("pneumonia","best")
rankall("pneumonia","worst")
head(rankall("heart attack", 20), 10)
source("rankall.R")
head(rankall("heart attack", 20), 10)
tail(rankall("pneumonia", "worst"), 3)
tail(rankall("heart failure"), 10)
best("SC","heart attack")
source("best.R")
best("SC","heart attack")
best("NY","pneumonia")
best("AK","pneumonia")
source("rankhospital.R")
rankhospital("NC","heart attack","worst")
rankhospital("WA","heart attack",7)
rankhospital("TX","pneumonia",10)
rankhospital("NY","heart attack",7)
r <- rankall("heart attack", 4)
as.character(subset(r, state == "HI")$hospital)
r <- rankall("pneumonia", "worst")
as.character(subset(r, state == "NJ")$hospital)
r <- rankall("heart failure", 10)
as.character(subset(r, state == "NV")$hospital)
